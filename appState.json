{
  "EDITOR_STATE": {
    "allProjectFiles": {
      "2a928e4e-c892-4a2c-8944-981b438615e1": {
        "id": "2a928e4e-c892-4a2c-8944-981b438615e1",
        "parent": null,
        "name": "Test-572",
        "type": "DIRECTORY",
        "isDirectory": true,
        "children": [
          "14b56dc7-443c-46b0-842e-469f80ddf48d",
          "901b847f-2f5e-401c-8f13-de50c0228c5a"
        ],
        "isRemovable": false,
        "filePath": "Test-572"
      },
      "14b56dc7-443c-46b0-842e-469f80ddf48d": {
        "id": "14b56dc7-443c-46b0-842e-469f80ddf48d",
        "parent": "2a928e4e-c892-4a2c-8944-981b438615e1",
        "name": "lambda.js",
        "type": "JS_LAMBDA",
        "isDirectory": false,
        "children": [],
        "isRemovable": true,
        "filePath": "Test-572/lambda.js",
        "code": "// let google = require('googleapis').google;\n// let _auth = require('./Authorizer');\n// const pubsub = google.pubsub('v1');\n// let AWS = require('aws-sdk');\n// let SL_AWS = require('slappforge-sdk-aws');\n// const sqs = new SL_AWS.SQS(AWS);\n\nexports.handler = function (event, context, callback) {\n    // sqs.receiveMessage({\n    //     QueueUrl: `https://sqs.${process.env.AWS_REGION}.amazonaws.com/${process.env.SIGMA_AWS_ACC_ID}/KTestSQS`,\n    //     AttributeNames: ['All'],\n    //     MaxNumberOfMessages: '1',\n    //     VisibilityTimeout: '30',\n    //     WaitTimeSeconds: '0'\n    // }).promise()\n    //     .then(receivedMsgData => {\n    //         if (!!(receivedMsgData) && !!(receivedMsgData.Messages)) {\n    //             let receivedMessages = receivedMsgData.Messages;\n    //             receivedMessages.forEach(message => {\n    //                 // your logic to access each message through out the loop. Each message is available under variable message \n    //                 // within this block\n    //             });\n    //         } else {\n    //             // No messages to process\n    //         }\n    //     })\n    //     .catch(err => {\n    //         // error handling goes here\n    //     });\n\n    // pubsub.projects.topics.subscriptions.list({\n    //     topic: `projects/${process.env.GCP_PROJECT}/topics/MyFirstTopic`,\n    //     pageSize: 10\n    // })\n    //     .then(response => {\n    //         console.log(response.data);  // successful response\n    //         /*\n    //         response.data = {\n    //             \"subscriptions\": [\n    //                 \"projects/<project>/subscriptions/<subscription-1>\",\n    //                 \"projects/<project>/subscriptions/<subscription-2>\",\n    //                 ...\n    //             ]\n    //         }\n    //         */\n    //     })\n    //     .catch(err => {\n    //         console.log(err, err.stack); // an error occurred\n    //     });\n\n\n\n}",
        "config": {
          "runtime": "nodejs8.10",
          "handler": "handler",
          "timeout": 60,
          "memory": 128,
          "layers": []
        },
        "triggers": [],
        "testCases": {
          "c616227d-d253-44fb-9e2a-86cd2d14dc0c": {
            "id": "c616227d-d253-44fb-9e2a-86cd2d14dc0c",
            "name": "Unnamed event",
            "functionId": "14b56dc7-443c-46b0-842e-469f80ddf48d",
            "event": "{\n    \"key1\": \"value1\",\n    \"key2\": \"value2\",\n    \"key3\": \"value3\"\n}"
          }
        }
      },
      "901b847f-2f5e-401c-8f13-de50c0228c5a": {
        "id": "901b847f-2f5e-401c-8f13-de50c0228c5a",
        "parent": "2a928e4e-c892-4a2c-8944-981b438615e1",
        "name": "Authorizer.js",
        "type": "JS_FILE",
        "isDirectory": false,
        "children": [],
        "isRemovable": true,
        "filePath": "Test-572/Authorizer.js",
        "code": "const google = require(\"googleapis\").google;\n\nconst key = JSON.parse(process.env.GCP_SERVICE_ACCOUNT_KEY);\nconst jwtClient = new google.auth.JWT({\n    email: key.client_email,\n    key: key.private_key,\n    scopes: [\"https://www.googleapis.com/auth/cloud-platform\"]\n});\n\ngoogle.options({auth: jwtClient, project: process.env.GCP_PROJECT});"
      }
    },
    "deletedFiles": [],
    "rootNode": "2a928e4e-c892-4a2c-8944-981b438615e1",
    "openFiles": [
      "14b56dc7-443c-46b0-842e-469f80ddf48d"
    ],
    "currentFileId": "14b56dc7-443c-46b0-842e-469f80ddf48d",
    "resources": {},
    "customTemplate": {
      "dialect": null,
      "definitions": {}
    },
    "envVariables": [
      {
        "lambdaId": "all",
        "varKey": "SIGMA_AWS_ACC_ID",
        "varValue": null,
        "shouldPersist": false,
        "displayOnly": false,
        "editable": false
      },
      {
        "lambdaId": "all",
        "varKey": "GCP_SERVICE_ACCOUNT_KEY",
        "varValue": null,
        "shouldPersist": false,
        "displayOnly": false,
        "editable": false
      },
      {
        "lambdaId": "all",
        "varKey": "GCP_PROJECT",
        "varValue": null,
        "shouldPersist": false,
        "displayOnly": false,
        "editable": false
      }
    ],
    "packageJSON": {
      "dependencies": {}
    }
  },
  "PROJECT_META": {
    "projectName": "Test-572",
    "projectDescription": "",
    "projectVersion": "1.0.0",
    "projectRegion": "us-east-1",
    "platform": "AWS",
    "platformRegions": {},
    "lastSave": 1559293283839
  },
  "VCS_STATE": {
    "provider": "GitHub",
    "repo": {
      "name": "Test-572",
      "url": "https://github.com/sigmaidetest/Test-572"
    }
  }
}